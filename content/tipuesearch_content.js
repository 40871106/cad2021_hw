var tipuesearch = {"pages": [{'title': 'about', 'text': "In this semester's computer-aided design internship, each student is required to create a personal homework warehouse and web page according to the format of this HW template. \n \n 40871106 \n Website storage:  https://github.com/40871106/cad2021_hw \n Website link:  https://40871106.github.io/cad2021_hw/content/index.html \n \n", 'tags': '', 'url': 'about.html'}, {'title': 'Task1', 'text': '\n data = open("cad2021_2b_w2_list.txt").readlines()  \ndata = data[1:]  \nfor i in range(len(data)):  \n\xa0\xa0\xa0\xa0num_github = data[i]  \n\xa0\xa0\xa0\xa0num = num_github.split("\\t")[ 0]  \n\xa0\xa0\xa0\xa0account = num_github.split("\\t")[1]  \n\xa0\xa0\xa0\xa0if account == "":  \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0account = num  \n\xa0\xa0\xa0\xa0print("<p><span><a href=\'https://github.com/"+ str(account) +"/cad2021_hw\'> "+ str(num)+"</a> "+ "<a href=\'https://" +str(account) + ".github.io/cad2021_hw\'> "+ str(num) + "</a></span></p>") \n \n \n cad2021 2b each student\'s warehouse and website \n 40723126 \xa0 \n 40723135 \xa0 \n 40723217 \xa0 \n 40732331 \xa0 \n 40823114 \xa0 \n 40823115 \xa0 \n 40823117 \xa0 \n 40823119 \xa0 \n 40823122 \xa0 \n 40823127 \xa0 \n 40823146 \xa0 \n 40823148 \xa0 \n 40823215 \xa0 \n 40871106 \xa0 \n 40923201 \xa0 \n 40923203 \xa0 \n 40923204 \xa0 \n 40923205 \xa0 \n 40923206 \xa0 \n 40923207 \xa0 \n 40923208 \xa0 \n 40923209 \xa0 \n 40923210 \xa0 \n 40923211 \xa0 \n 40923212 \xa0 \n 40923213 \xa0 \n 40923214 \xa0 \n 40923216 \xa0 \n 40923217 \xa0 \n 40923218 \xa0 \n 40923219 \xa0 \n 40923220 \xa0 \n 40923221 \xa0 \n 40923223 \xa0 \n 40923224 \xa0 \n 40923225 \xa0 \n 40923226 \xa0 \n 40923227 \xa0 \n 40923228 \xa0 \n 40923229 \xa0 \n 40923230 \xa0 \n 40923231 \xa0 \n 40923232 \xa0 \n 40923233 \xa0 \n 40923234 \xa0 \n 40923235 \xa0 \n 40923236 \xa0 \n 40923237 \xa0 \n 40923238 \xa0 \n 40923239 \xa0 \n 40923240 \xa0 \n 40923241 \xa0 \n 40923242 \xa0 \n 40923243 \xa0 \n 40923244 \xa0 \n 40923245 \xa0 \n 40923246 \xa0 \n 40923247 \xa0 \n 40923248 \xa0 \n 40923249 \xa0 \n 40923250 \xa0 \n 40923251 \xa0 \n 40923252 \xa0 \n 40923253 \xa0 \n 40971220 \xa0 \n 40971227 \xa0 \n \n', 'tags': '', 'url': 'Task1.html'}, {'title': 'HW1', 'text': 'HW1 佔學期成績 25% \n HW1 必須在 2021.11.10 22:00 之前完成. \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.11.10 22:00 關閉. \n 作業一: meArm Robot 零件繪圖與機電運動模擬場景製作 \n Step1 : 下載  meARM.7z  這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊. \n meArm_75-0040_v1.pdf  則是另外一本組立參考手冊. \n Step2 : 從課程網頁中的  Compile CoppeliaSim 頁面 , 下載  coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z  (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件. \n Step3 : 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入  CoppeliaSim 進行組裝配置後, 以  UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 2b CAD 套件分配結果:  https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt \n 附件: \n 1. CAD 套件分配表: \n sw：Solidworks，inv：Inventor，nx：NX12，ons：Onshape，slvs：Solvespace \n 2a 套件亂數分配結果 \n 2b 套件亂數分配結果 \n 2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用  shape edit modes  轉為  clean model , 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes). \n 3. meARM Robot  動態模擬場景 的建構, 可參考  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 , 也可參考  Uarm Robot model  與相關 影片 . \n 4. CoppeliaSim design dynamic simulations  說明頁面 . \n 5.  網際 Lua  程式執行. \n 6.  meArm.slvs  ,  meArm_in_solvespace.slvs \n 7. UI 介面程式參考: \n function closeEventHandler(h)  \n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' 正在關閉...\')  \n    simUI.hide(h)  \nend  \n \nfunction joint1_rotate(ui,id,newVal)  \n    simUI.setLabelText(ui ,3000,\'theta1 設置為\'..newVal)  \n    sim.setJointTargetPosition(joint1, newVal*deg) \n結束 \n \n函數joint2_rotate(ui,id,newVal)  \n    simUI.setLabelText(ui,3000,\'theta2 設置為\'..newVal)  \n    sim .setJointTargetPosition(joint2, newVal*deg) \n結束 \n \n函數joint3_rotate(ui,id,newVal)  \n    simUI.setLabelText(ui,3000,\'theta3 設置為\'..newVal)  \n    sim.setJointTargetPosition(joint3, newVal*deg) \n結束 \n \n函數joint16_rotate( ui,id,newVal) \n    simUI.setLabelText(ui,3000,\'theta16 set to \'..newVal)  \n    sim.setJointTargetPosition(joint16, newVal*deg)  \n    sim.setJointTargetPosition(joint20, -newVal*deg)  \nend  \n \nfunction sysCall_init()  \n    -- 在這裡做一些初始化 \n    joint1 = sim.getObjectHandle(\'motor1\')  \n    joint2 = sim.getObjectHandle(\'motor2\')  \n    joint3 = sim.getObjectHandle(\'motor3\')  \n    joint16 = sim.getObjectHandle(\'motor16\')  \n    joint20 = sim.getObjectHandle(\'motor20\')  \n    i = 0 \n    度 = math.pi/180  \n    print(i)  \n    xml = [[  \n<ui closeable="true" on-close="closeEventHandler" resizable="true"> \n    " <label text="這是 CustomUI 插件的演示。瀏覽下面的選項卡以探索可以使用該插件創建的所有小部件。 wordwrap="true" />  \n    <tabs>  \n        <tab title="Numeric">a  \n            <label text="Slider 可以水平或垂直定向，並且具有可以設置的可選屬性（在 XML 中），例如最小值和最大值價值。”  wordwrap="true" />  \n            <label text="" id="3000" wordwrap="true" />  \n            <label text="theta1" /> <hslider tick-position="above" tick-interval="1"  \n            minimum="0" maximum="360" on-change="joint1_rotate" \n            minimum="-90" maximum="65" on-change="joint2_rotate" />  \n            <label text="theta3" /> <hslider tick-position="above" tick-interval="1"  \n            minimum="-90 " maximum="185" on-change="joint3_rotate" />  \n            <label text="theta16" /> <hslider tick-position="above" tick-interval="1"  \n            minimum="0" maximum="15" on-change="joint16_rotate" />  \n        </tab>  \n    </tabs>  \n</ui>  \n]]  \n    ui=simUI.create(xml)  \n     \nend \n \n （來自： 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOOT - 計算模型和實驗結果.pdf ） \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'Solidworks\xa0繪圖', 'text': '緣起: \n 1993年，創始人 Jon Hirschtick 招募了一組工程師團隊，其招募意旨是使3D CAD軟體更容易上手。Hirschtick從廣受好評的麻省理工學院二十一點隊的成員中籌得100萬美元，開始了他的新事業。該團隊的目標是構建一個基於 Windows平台 的易於使用且價格合理的軟體。這在當時真的是革命性的存在，當時所有其他流行的CAD系統都是在 Unix 上構建的。經過幾年的開發，最初發布的SolidWorks終於來了...... \n 介紹: \n 最初代的版本1995年發行，其特色如下。 \n 1.與其他CAD系統的18,000美元相比，SolidWorks的售價僅為4,000美元。 \n 2.該軟體更易於使用：與市場上其他CAD軟體相比，用戶只需3個月的使用經驗就可以輕鬆上手。 \n \xa0 易上手的原因有很大一部分在於它採用了現代著名的Windows界面。 \n 3.模型的可視化是前所未有的。在光線充足的陰影環境中的構建功能與傳統建模空間形成鮮明對比， \n \xa0 傳統建模空間僅顯示黑色背景下的線框。我們現在熟悉的類似FeatureManager用於顯示模型的構建歷\xa0 \xa0 \xa0 史。 \n 4.零件，組件和圖紙從一開始就可用。用戶無法在組件中應用配合，但仍可將組件放置到位。 \n \n', 'tags': '', 'url': 'Solidworks\xa0繪圖.html'}, {'title': 'Solidworks2021 安裝配置', 'text': '\n \n \n \n \n \n \n 求解空間： \n 至  https://solvespace.com  下載或從  https://github.com/solvespace/solvespace  下載原始碼, 以可攜程式系統自行編譯後使用. \n', 'tags': '', 'url': 'Solidworks2021 安裝配置.html'}, {'title': 'Solidworks操作流程', 'text': 'CAD1 零組件繪圖操作流程影片 (Youtube) \n CAD1 零組件繪圖教學影片 (Wink) \n CAD1 零組件繪圖教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零組件繪圖教學影片」且加上 語音說明 與 字幕. \n', 'tags': '', 'url': 'Solidworks操作流程.html'}, {'title': 'Solvespace繪圖', 'text': '緣起: \n 2013 年在Libre Graphics World上發表了對開發人員的簡短評論和採訪。而這篇評論稱讚 SolveSpace的 可執行文件小、先進的約束求解器和輸出格式範圍 。同一篇評論指出了一些缺點，主要是它對 布爾值的緩慢和有限的處理以及缺乏原生 Linux 支持 。但是，此後增加了本地 Linux 支持。 \n 介紹: \n - 建模 3D 零件 – 使用拉伸、旋轉和布爾（並/差）操作進行繪製 \n - 建模 2D 零件 – 將零件繪製為單個部分，並導出為DXF、PDF或SVG；使用 3D 裝配驗證配合 \n \xa0準備CAM數據 – 為水刀機或激光切割機導出 2D 矢量藝術；或生成 STEP 或STL，用於導入第三方 \n \xa0CAM 軟件 - 機構設計 - 使用約束求解器模擬平面或空間鏈接，包括銷、球或滑動關節 - 平面和實體幾何 - 用實時尺寸繪圖替換手工求解的三角函數和電子表格 \n \n', 'tags': '', 'url': 'Solvespace繪圖.html'}, {'title': 'Solvespace安裝配置', 'text': 'CAD2 套件下載安裝與配置 \n CAD2 套件下載安裝與配置影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  套件下載安裝與配置影片」且加上 語音說明 與 字幕. \n', 'tags': '', 'url': 'Solvespace安裝配置.html'}, {'title': 'Solvspace操作流程', 'text': 'CAD2 指各學員所分配到的第二套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n CAD2 零組件繪圖操作流程影片 (Youtube) \n CAD2 零組件繪圖教學影片 (Wink) \n CAD2 零組件繪圖教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零組件繪圖教學影片」且加上 語音說明 與 字幕. \n', 'tags': '', 'url': 'Solvspace操作流程.html'}, {'title': '運動場景', 'text': '加元1： \n CAD1 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD1 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD1 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n 加元2： \n CAD2 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD2 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD2 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱. \n', 'tags': '', 'url': '運動場景.html'}, {'title': '進度', 'text': '\n \n', 'tags': '', 'url': '進度.html'}, {'title': 'HW1-1', 'text': 'HW1-1 佔學期成績 15% \n HW1-1 必須在 2021.12.01 22:00 之前完成. \n HW1-1 具體項目成果回報區 將於 2021.11.18 開啟, 於  2021.12.01 22:00 關閉. \n 作業 1-1: Mirobot 機械手臂場景組合 \n 說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至  Task1-1  中六個自由度的 Mirobot 機械手臂. \n mirobot_part1_to_part5.7z  為取自 \xa0 https://github.com/wlkata/Mirobot-STL  的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過  UI 介面 中的 slider 控制各軸作動旋轉的運動模型. \n 請根據  Task1-1  中的說明, 完成各項指定任務. \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_製造微型機器人的增材製造工藝 - 計算模型和實驗結果.pdf \n 具有逆向運動學 PD-偽逆雅可比行列式和正向運動學的機器人機械手控制 Denavit Hartenber.pdf \n 機器人手臂運動學分析.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 為選項作業. \n HW3 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n https://mde.tw/cad2021/content/Task3.html \xa0 \n https://mde.tw/cad2021/content/Task4.html \n https://mde.tw/cad2021/content/Task5.html \n https://mde.tw/cad2021/content/Task6.html \n https://mde.tw/cad2021/content/Task7.html \n 請從上列 Tasks 中自行選擇項目內容完成 HW3. \n', 'tags': '', 'url': 'HW3.html'}, {'title': '最終項目', 'text': 'Final Project 佔學期成績 40% \n 2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project \n Final Project specific project results return area  will be opened on  December 09  ,  2021, and closed  at  2022.01.05 22:00 \n Design and production of flexible manufacturing system scene \n Please  select a scene or model  from  https://github.com/mdecourse/scenes  and  https://github.com/mdecourse/models  , and match the  content of cad2021_textbook.pdf  (download after logging in to the @gm account), make your own choice Combined with the assembly product, it is combined into a Flexible Manufacturing System system scenario. \n Description of flexible manufacturing system \n example: \n \n', 'tags': '', 'url': '最終項目.html'}]};